---

- name: create admin groups
  group:
    name: "{{ item }}"
    state: present
  with_items: 
    - "{{ users_admin_groups }}"
    - "{{ users_admin_users }}"

- name: Add admin users
  user:
    name: "{{ item }}"
    group: "{{ item }}"
    groups: "{{ users_admin_groups | join(',') }}"
    password: '*'
    comment: "ansible-{{ item }}"
    shell: /bin/bash
    append: no
  with_items: "{{ users_admin_users }}"

- name: Create sudoers directory if it does not exist
  ansible.builtin.file:
    path: /etc/sudoers.d
    state: directory
    owner: root
    group: root
    mode: '0440'

- name: Allow users in admin group to run sudo
  template:
    src: 00-admin
    dest: /etc/sudoers.d/{{ item }}
    owner: root
    group: root
    mode: 0440
  with_items: "{{ users_admin_users }}"

- name: Set ssh keys for admin users
  ansible.posix.authorized_key:
    user: "{{ item.user }}"
    key: "{{ item.key | join('\n') }}"
    state: present
    exclusive: true
  become_user: "{{ item.user }}"
  with_items: "{{ users_users }}"
  when: item.key is defined and item.user in users_admin_users

- name: configure sshd
  lineinfile:
    state: present
    path: '/etc/ssh/sshd_config'
    regex: '^(#)?{{item.key}}'
    line: '{{item.key}} {{item.value}}'
  loop:
    - { key: 'StrictModes', value: 'yes' }
    - { key: 'PermitRootLogin', value: 'no' }
    - { key: 'PasswordAuthentication', value: 'no' }
    - { key: 'PermitEmptyPasswords', value: 'no' }
    - { key: 'ChallengeResponseAuthentication', value: 'no' }
    - { key: 'UsePAM', value: 'no' }
    - { key: 'HostbasedAuthentication', value: 'no' }
    - { key: 'AllowGroups', value: 'sshusers sftpusers' }
  notify:
    - restart_sshd     
