---

services:
  traefik:
    image: traefik:v2.11.6
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80 #Internal http
      # - 81:81 #External http
      - 443:443 #Internal https
      # - 444:444 #External https
    depends_on:
      - redis
    environment:
      CF_API_EMAIL: "{{ cloudflare_email }}"
      CF_DNS_API_TOKEN: "{{ cloudflare_api }}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/docker/traefik/traefik.yml:/traefik.yml:ro
      - /home/docker/traefik/acme.json:/acme.json
      - /home/docker/traefik/config.yml:/config.yml:ro
      - /home/docker/traefik/logs:/var/log/traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`{{ traefik_dashboard_url }}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users={{ traefik_dashboard_creds }}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`{{ traefik_dashboard_url }}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[1].main=home.{{ domain_name }}"
      - "traefik.http.routers.traefik-secure.tls.domains[1].sans=*.home.{{ domain_name }}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main={{ domain_name }}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ domain_name }}"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - proxy
    ports:
      - 6379:6379

networks:
  proxy:
    external: true
